.. _installing:

Installing hstaxe
=================

Preparing Your Local Environment
--------------------------------
We recommend using Anaconda to manage your ``hstaxe`` environment.

You may want to consider installing ``hstaxe`` in a new virtual or conda
environment to avoid version conflicts with other packages you may have
installed. We provide a premade conda environment yaml, or you may build the
environment manually.

Using the Provided HSTaXe Environment
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.. code-block:: bash

    conda create --name hstaxe-env --file conda_environment.yml
    conda activate hstaxe-env


Manually Creating Your Environment
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Start by creating an empty conda environment:

.. code-block:: bash

    conda create -name hstaxe-env
    conda activate hstaxe-env

Build Prerequisites
"""""""""""""""""""
Because the core modules of ``hstaxe`` are written in C, we require some
additional prerequisites to be installed before attempting to install ``hstaxe``:

.. code-block:: bash
    
    conda install gsl cfitsio make automake autoconf libtool pkg-config -y
    conda install wcstools -c https://conda.anaconda.org/conda-forge/ --override-channels -y


Installing HSTaXe
-----------------
``hstaxe`` is distributed through PyPI. To install the latest release of ``hstaxe``:

.. code-block:: bash

    pip install hstaxe

To instead install the latest development version, you can either install from our
GitHub repository directly:

.. code-block:: bash

    pip install git+https://github.com/spacetelescope/hstaxe.git

or alternatively, clone the repository locally and install the clone:

.. code-block:: bash

    git clone https://github.com/spacetelescope/hstaxe.git
    cd hstaxe
    pip install .

    
Additional Requirements
-----------------------
In the event the above installation instructions do not succeed, the following
requirements, which are usually included by default, may be useful to check:

C Compiler
^^^^^^^^^^
A C compiler suite (e.g., ``gcc`` or ``clang``) is required to build ``hstaxe``.
These are usually included by default on most macOS and Linux distributions.

C compliers are not included by default in Windows. Microsoft provides these
tools as part of their
`Build Tools for Visual Studio <https://visualstudio.microsoft.com/downloads>`_, 
which can be found under "Tools for Visual Studio" towards the bottom of the page.

Note that you may also need to install the
`c-blosc <https://github.com/Blosc/c-blosc>`_ package as a dependency
of the `tables <https://pypi.org/project/tables/>` package on certain
platforms (e.g., this is currently needed for macOS and Windows with
Python 3.9 due to missing ``tables`` wheels on PyPI).


Legacy Astroconda Installation
------------------------------
For historical preservation, we provide the original installation instructions
for installing ``hstaxe`` via Astroconda:

.. code-block:: bash

    conda install gsl cfitsio make automake autoconf libtool pkg-config -y
    conda install wcstools -c https://ssb.stsci.edu/astroconda -y
    conda install hstaxe -c https://ssb.stsci.edu/astroconda


Package Structure
-----------------

The ``hstaxe`` software is composed of a combination of routines written in
ANSI-C and python. Many of the python modules use the C executables to
do their work, while some perform all operations within the python
module itself. The C executables reside in the cextern directory, 
while the python source routines reside in hstaxe tree.


Validating the aXe installation
-------------------------------

Test data with WFC3 and ACS grism images, as well ACS prism
images, can be obtained from the aXe web site at
http://axe.stsci.edu/axe/testdata.html. Unzip and untar the test data
file in a clean directory and follow the instructions given in the
README file. The ACS grism test data consist of a set of science frames
taken from the HUDF HRC Parallels program. 

The prism test data was taken as part of the calibration proposal 10391 (PI: S.S. Larsen).

The WFC3 test data originates from the WFC3 Early Release Science programm (PID: 11359, PI: O'Connell)

Reference spectra generated by running aXe on the test data are also
supplied as part of the test packages. If the output obtained by running
aXe on the test data is identical to these reference spectra, the proper
working of aXe is assured.
